{
	"info": {
		"_postman_id": "19c3782f-229a-4806-aebb-5e5171fc397e",
		"name": "RoleAssignmentsSystem_Successful_Post_Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "35183864"
	},
	"item": [
		{
			"name": "save User_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате JSON\", function () {",
							"    pm.response.to.have.status(201);",
							"    pm.response.to.be.json;",
							"});",
							"",
							"const source = JSON.parse(pm.request.body.raw);",
							"const target = pm.response.json();",
							"",
							"pm.test(\"Пользователь должен содержать поля: id, name, email\", function () {",
							"    pm.expect(target).to.have.property('id');",
							"    pm.expect(target).to.have.property('name');",
							"    pm.expect(target).to.have.property('email');",
							"});",
							"",
							"pm.test(\"Данные в ответе должны соответствовать данным в запросе\", function () {",
							"    pm.expect(target.id).to.not.be.null;",
							"    pm.expect(source.name).to.equal(target.name, 'Имя пользователя должно соответствовать отправленному в запросе');",
							"    pm.expect(source.email).to.equal(target.email, 'Почта пользователя должна соответствовать отправленной в запросе');",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"packages": {},
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\":\"User_2\",\n    \"email\": \"User_2@ya.ru\",\n    \"password\": \"123456\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/api/users",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "save User_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате JSON\", function () {",
							"    pm.response.to.have.status(201);",
							"    pm.response.to.be.json;",
							"});",
							"",
							"const source = JSON.parse(pm.request.body.raw);",
							"const target = pm.response.json();",
							"",
							"pm.test(\"Пользователь должен содержать поля: id, name, email\", function () {",
							"    pm.expect(target).to.have.property('id');",
							"    pm.expect(target).to.have.property('name');",
							"    pm.expect(target).to.have.property('email');",
							"});",
							"",
							"pm.test(\"Данные в ответе должны соответствовать данным в запросе\", function () {",
							"    pm.expect(target.id).to.not.be.null;",
							"    pm.expect(source.name).to.equal(target.name, 'Имя пользователя должно соответствовать отправленному в запросе');",
							"    pm.expect(source.email).to.equal(target.email, 'Почта пользователя должна соответствовать отправленной в запросе');",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\":\"User_3\",\n    \"email\": \"User_3@ya.ru\",\n    \"password\": \"123456\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/api/users",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "save Role_1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате JSON\", function () {",
							"    pm.response.to.have.status(201);",
							"    pm.response.to.be.json;",
							"});",
							"",
							"const source = JSON.parse(pm.request.body.raw);",
							"const target = pm.response.json();",
							"",
							"pm.test(\"Роль должна содержать поля: id, name, description\", function () {",
							"    pm.expect(target).to.have.property('id');",
							"    pm.expect(target).to.have.property('name');",
							"    pm.expect(target).to.have.property('description');",
							"});",
							"",
							"pm.test(\"Данные в ответе должны соответствовать данным в запросе\", function () {",
							"    pm.expect(target.id).to.not.be.null;",
							"    pm.expect(source.name).to.equal(target.name, 'Название роли должно соответствовать отправленному в запросе');",
							"    pm.expect(source.description).to.equal(target.description, 'Описание роли должно соответствовать отправленной в запросе');",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\":\"Role_1\",\n    \"description\": \"Role one\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:9090/api/roles",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"api",
						"roles"
					]
				}
			},
			"response": []
		},
		{
			"name": "save Role_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате JSON\", function () {",
							"    pm.response.to.have.status(201);",
							"    pm.response.to.be.json;",
							"});",
							"",
							"const source = JSON.parse(pm.request.body.raw);",
							"const target = pm.response.json();",
							"",
							"pm.test(\"Роль должна содержать поля: id, name, description\", function () {",
							"    pm.expect(target).to.have.property('id');",
							"    pm.expect(target).to.have.property('name');",
							"    pm.expect(target).to.have.property('description');",
							"});",
							"",
							"pm.test(\"Данные в ответе должны соответствовать данным в запросе\", function () {",
							"    pm.expect(target.id).to.not.be.null;",
							"    pm.expect(source.name).to.equal(target.name, 'Название роли должно соответствовать отправленному в запросе');",
							"    pm.expect(source.description).to.equal(target.description, 'Описание роли должно соответствовать отправленной в запросе');",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\":\"Role_2\",\n    \"description\": \"second Role\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:9090/api/roles",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"api",
						"roles"
					]
				}
			},
			"response": []
		},
		{
			"name": "Set Role_1 to User_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Ответ должен содержать код статуса 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Ответ должен быть в формате JSON\", function () {",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"Ответ должен содержать ожидаемые данные\", function () {",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson).to.have.property('id');",
							"    pm.expect(responseJson.id).to.have.property('userId', 2);",
							"    pm.expect(responseJson.id).to.have.property('roleId', 1);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "localhost:7070/api/users/2/roles/1",
					"host": [
						"localhost"
					],
					"port": "7070",
					"path": [
						"api",
						"users",
						"2",
						"roles",
						"1"
					]
				}
			},
			"response": []
		}
	]
}